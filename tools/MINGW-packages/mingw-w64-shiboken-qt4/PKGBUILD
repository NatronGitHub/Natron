# Maintainer: Alexey Pavlov <alexpux@gmail.com>
# Contributor: Xin Sun <sun.simpson@gmail.com>

DLAGENTS=("https::/usr/bin/curl -k -o %o %u")
_realname=shiboken-qt4
pkgname=${MINGW_PACKAGE_PREFIX}-python2-${_realname}
pkgver=1.2.4
pkgrel=4
arch=('any')
url="http://pyside.github.io/docs/pyside/"
license=("LGPL")
install=${_realname}-${CARCH}.install
source=(https://pypi.python.org/packages/source/P/PySide/PySide-${pkgver}.tar.gz
        shiboken.patch)
sha256sums=('1421bc1bf612c396070de9e1ffe227c07c1f3129278bc7d30c754b5146be2433'
         '603b3ac935a60494cc9cb52c3e0847f61353df546dfea88544025e9ddea5e7c0')
makedepends=("${MINGW_PACKAGE_PREFIX}-libxml2"
             "${MINGW_PACKAGE_PREFIX}-libxslt"
             "${MINGW_PACKAGE_PREFIX}-python2"
             "${MINGW_PACKAGE_PREFIX}-qt4"
             "${MINGW_PACKAGE_PREFIX}-gcc"
             "${MINGW_PACKAGE_PREFIX}-cmake")
options=('staticlibs' 'strip')

prepare() {
  cd ${srcdir}/PySide-${pkgver}
  patch -p1 -i ${srcdir}/shiboken.patch
}

build() {
  for pyv in python2; do
    local _conf=
    if [ "${pyv}" = "python3" ]; then
      _conf="-DUSE_PYTHON3=yes"
    fi
    [[ -d ${srcdir}/build-${MINGW_CHOST} ]] && rm -rf ${srcdir}/build-${MINGW_CHOST}
    cp -rf PySide-${pkgver} build-${MINGW_CHOST}-${pyv}
    pushd ${srcdir}/build-${MINGW_CHOST}-${pyv}/sources/shiboken > /dev/null
    
    export MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX"
    ${MINGW_PREFIX}/bin/cmake \
      -G"MSYS Makefiles" \
	  -DBUILD_TESTS=FALSE \
      -DCMAKE_OBJECT_PATH_MAX=1024 \
      -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
      ${_conf} \
      -DCMAKE_BUILD_TYPE=RELEASE \
      -DPYTHON_EXECUTABLE=${MINGW_PREFIX}/bin/${pyv}.exe

    make -j${MKJOBS}

    popd > /dev/null
  done

}

fix_paths() {
  local prefixwin=$(cygpath -am ${MINGW_PREFIX})
  local prefixinst=$(cygpath -am ${pkgdir}${MINGW_PREFIX})
  
  local _files=$(find ${pkgdir}${MINGW_PREFIX}/lib/cmake/Shiboken-${pkgver} -type f -iname "*.cmake" -o -iname "*.pc")
  for f in ${_files}; do
    plain "Patching ${f}..."
    sed -e "s|${prefixwin}|${MINGW_PREFIX}|g" \
        -e "s|${prefixinst}|${MINGW_PREFIX}|g" \
        -i ${f}
  done
}

package() {
#  pkgdesc="CPython bindings generator for C++ libraries (mingw-w64)"
#  makedepends=("${MINGW_PACKAGE_PREFIX}-libxml2"
#               "${MINGW_PACKAGE_PREFIX}-libxslt"
#               "${MINGW_PACKAGE_PREFIX}-python3"
#               "${MINGW_PACKAGE_PREFIX}-qt4")

  #cd ${srcdir}/build-${MINGW_CHOST}-python2/sources/shiboken/data
  #install -Dm644 ShibokenConfig-python2.7.cmake ${pkgdir}${MINGW_PREFIX}/lib/cmake/Shiboken-${pkgver}/
  #install -Dm644 shiboken.pc ${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/Shiboken-py2.pc
  
  #fix_paths
  #package_python2-shiboken
#}
#
#package_python2-shiboken() {
#  pkgdesc="Support library for Python2 bindings (mingw-w64)"
#  makedepends=("${MINGW_PACKAGE_PREFIX}-libxml2"
#               "${MINGW_PACKAGE_PREFIX}-libxslt"
#               "${MINGW_PACKAGE_PREFIX}-python2"
#               "${MINGW_PACKAGE_PREFIX}-shiboken"
#               "${MINGW_PACKAGE_PREFIX}-qt4")

  cd ${srcdir}/build-${MINGW_CHOST}-python2/sources/shiboken
  make DESTDIR=${pkgdir} install
  
  cd data
  install -Dm644 ShibokenConfig-python2.7.cmake ${pkgdir}${MINGW_PREFIX}/lib/cmake/Shiboken-${pkgver}/
  mv ${pkgdir}${MINGW_PREFIX}/lib/pkgconfig/shiboken{,-py2}.pc
  
  fix_paths
}

# Wrappers
#package_mingw-w64-i686-shiboken-qt4() {
#  package_shiboken
#}

#package_mingw-w64-i686-python2-shiboken-qt4() {
#  package_python2-shiboken
#}

#package_mingw-w64-x86_64-shiboken-qt4() {
#  package_shiboken
#}

#package_mingw-w64-x86_64-python2-shiboken-qt4() {
#  package_python2-shiboken
#}

