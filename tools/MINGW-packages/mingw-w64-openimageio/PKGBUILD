# Maintainer: ole.andre.rodlie@gmail.com

_realname=openimageio
pkgbase=mingw-w64-${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-${_realname}"
pkgver=2.2.15.0
pkgrel=1
pkgdesc="A library for reading and writing images, including classes, utilities, and applications (mingw-w64)"
arch=('any')
url="http://www.openimageio.org/"
license=("BSD-3")
depends=("${MINGW_PACKAGE_PREFIX}-boost"
         "${MINGW_PACKAGE_PREFIX}-freetype"
         "${MINGW_PACKAGE_PREFIX}-jasper"
         "${MINGW_PACKAGE_PREFIX}-giflib"
         "${MINGW_PACKAGE_PREFIX}-libjpeg"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-LibRaw-gpl2"
         "${MINGW_PACKAGE_PREFIX}-libwebp"
         "${MINGW_PACKAGE_PREFIX}-libtiff"
         "${MINGW_PACKAGE_PREFIX}-opencolorio"
         "${MINGW_PACKAGE_PREFIX}-openexr"
         "${MINGW_PACKAGE_PREFIX}-libheif"
         "${MINGW_PACKAGE_PREFIX}-openjpeg2"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-boost"
             "git")
options=('strip' 'buildflags' '!debug')
source=(${_realname}-${pkgver}.tar.gz::https://github.com/OpenImageIO/oiio/archive/Release-${pkgver}.tar.gz
        git+https://github.com/OpenImageIO/oiio-images.git
        oiio-2.1.10-boost.diff
        oiio-2.0.8-invalidatespec.patch
        #oiio-2.2.13.0-c++11.patch
  )
sha256sums=('5861e2533d7c8f7ca61631abe99e3882f94502617a7ff3ad654f8ea48e0fbd16'
            'SKIP'
            'e8aec185fd20a6e5cdf77a7155fcaedb301c07bd806f73bd30dfc75af721ac83'
            'd9c2e066ce0e94404d31fd649341cc0ee03faf9b4023dfcdf5cf59fbbf466127'
            #'ed831f62a84c312aa7a079caf1a207de4cf5564bb1cb184cf625abbd78cb8da2'
      )

prepare() {
  cd ${srcdir}/oiio-Release-${pkgver}
  patch -p0 -i ${srcdir}/oiio-2.1.10-boost.diff
  patch -p1 -i ${srcdir}/oiio-2.0.8-invalidatespec.patch
  # patch -p1 -i ${srcdir}/oiio-2.2.13.0-c++11.patch # added in 2.2.13.1
}

build() {
  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  [[ -d "build-${MINGW_CHOST}" ]] && rm -rf "build-${MINGW_CHOST}"
  mkdir -p build-${MINGW_CHOST} && cd build-${MINGW_CHOST}

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  PKG_CONFIG_PATH="${MINGW_PREFIX}/libraw-gpl2/lib/pkgconfig:${PKG_CONFIG_PATH}" \
  LibRaw_INCLUDE_DIR="${MINGW_PREFIX}/libraw-gpl2/include/libraw" \
  LibRaw_r_LIBRARIES="-L${MINGW_PREFIX}/libraw-gpl2/lib -lraw_r -lstdc++ -fopenmp" \
  LibRaw_ROOT="${MINGW_PREFIX}/libraw-gpl2" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DUSE_FFMPEG=OFF \
    -DUSE_OPENJPEG=ON \
    -DUSE_FREETYPE=ON \
    -DUSE_OPENCV=OFF \
    -DUSE_FIELD3D=OFF \
    -DUSE_OPENSSL=OFF \
    -DUSE_GIF=ON \
    -DUSE_HEIF=ON \
    -DUSE_LIBRAW=ON \
    -DUSE_NUKE=OFF \
    -DSTOP_ON_WARNING=OFF \
    -DBOOST_ROOT=${MINGW_PREFIX} \
    -DOpenJpeg_ROOT=${MINGW_PREFIX} \
    -DOPENJPEG_INCLUDE_DIR=`pkg-config --variable=includedir libopenjp2` \
    -DUSE_QT=OFF \
    -DUSE_PYTHON=OFF \
    -DUSE_PYTHON3=OFF \
    -DUSE_PTEX=OFF \
    -DUSE_EXTERNAL_PUGIXML=OFF \
    -DOIIO_BUILD_TESTS=OFF \
    -DCMAKE_CXX_STANDARD=11 \
    -DCMAKE_SHARED_LINKER_FLAGS=" -Wl,--export-all-symbols -Wl,--enable-auto-import " \
    ${extra_config} \
    ../oiio-Release-${pkgver}
  make
}

package() {
  cd "${srcdir}"/build-${MINGW_CHOST}
  make DESTDIR=${pkgdir} install
  install -Dm644 ${srcdir}/oiio-Release-${pkgver}/LICENSE.md "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE.md"
  install -Dm644 ${srcdir}/oiio-Release-${pkgver}/THIRD-PARTY.md "${pkgdir}${MINGW_PREFIX}/share/licenses/${_realname}/LICENSE-THIRD-PARTY.md"
}
