# Maintainer: ole.andre.rodlie@gmail.com

_realname=openimageio
pkgbase=mingw-w64-natron_${_realname}
pkgname="${MINGW_PACKAGE_PREFIX}-natron_${_realname}"
pkgver=2.5.7.0
pkgrel=99.1
pkgdesc="A library for reading and writing images, including classes, utilities, and applications (mingw-w64)"
arch=('any')
url="http://www.openimageio.org/"
license=("spdx:Apache-2.0")
depends=("${MINGW_PACKAGE_PREFIX}-boost"
         "${MINGW_PACKAGE_PREFIX}-freetype"
         "${MINGW_PACKAGE_PREFIX}-jasper"
         "${MINGW_PACKAGE_PREFIX}-giflib"
         "${MINGW_PACKAGE_PREFIX}-libjpeg"
         "${MINGW_PACKAGE_PREFIX}-libpng"
         "${MINGW_PACKAGE_PREFIX}-natron_libraw-gpl2"
         "${MINGW_PACKAGE_PREFIX}-libwebp"
         "${MINGW_PACKAGE_PREFIX}-libtiff"
         "${MINGW_PACKAGE_PREFIX}-natron_opencolorio-git"
         "${MINGW_PACKAGE_PREFIX}-natron_openexr"
         "${MINGW_PACKAGE_PREFIX}-libheif"
         "${MINGW_PACKAGE_PREFIX}-openjpeg2"
         "${MINGW_PACKAGE_PREFIX}-zlib")
makedepends=("${MINGW_PACKAGE_PREFIX}-cmake"
             "${MINGW_PACKAGE_PREFIX}-boost"
             "${MINGW_PACKAGE_PREFIX}-cc"
             "git")
options=('strip' 'buildflags' '!debug')
source=(${_realname}-${pkgver}.tar.gz::https://github.com/OpenImageIO/oiio/archive/v${pkgver}.tar.gz
        git+https://github.com/OpenImageIO/oiio-images.git
        oiio-2.1.10-boost.diff
        oiio-2.0.8-invalidatespec.patch
        oiio-2.2.14-libraw.diff
       )
sha256sums=('801d57a2923912825cfd7780ab3ae4284f7a83c788fac9ea627f51c0185695fd'
            'SKIP'
            'e8aec185fd20a6e5cdf77a7155fcaedb301c07bd806f73bd30dfc75af721ac83'
            'd9c2e066ce0e94404d31fd649341cc0ee03faf9b4023dfcdf5cf59fbbf466127'
            '89e21326d6445304293bcedc3a52bfa1dfec9b769b397f6a312ca27d1de93423'
           )

prepare() {
  cd ${srcdir}/OpenImageIO-${pkgver}
  #patch -p0 -i ${srcdir}/oiio-2.1.10-boost.diff
  patch -p1 -i ${srcdir}/oiio-2.0.8-invalidatespec.patch
  patch -p0 -i ${srcdir}/oiio-2.2.14-libraw.diff
}

build() {
  declare -a extra_config
  if check_option "debug" "n"; then
    extra_config+=("-DCMAKE_BUILD_TYPE=Release")
  else
    extra_config+=("-DCMAKE_BUILD_TYPE=Debug")
  fi

  [[ -d "build-${MINGW_CHOST}" ]] && rm -rf "build-${MINGW_CHOST}"
  mkdir -p build-${MINGW_CHOST} && cd build-${MINGW_CHOST}

  MSYS2_ARG_CONV_EXCL="-DCMAKE_INSTALL_PREFIX=" \
  PKG_CONFIG_PATH="${MINGW_PREFIX}/libraw-gpl2/lib/pkgconfig:${PKG_CONFIG_PATH}" \
  ${MINGW_PREFIX}/bin/cmake.exe \
    -Wno-dev \
    -G"MSYS Makefiles" \
    -DCMAKE_INSTALL_PREFIX=${MINGW_PREFIX} \
    -DCMAKE_DLL_NAME_WITH_SOVERSION=OFF \
    -DUSE_FFMPEG=OFF \
    -DUSE_OPENJPEG=ON \
    -DUSE_FREETYPE=ON \
    -DUSE_OPENCV=OFF \
    -DUSE_FIELD3D=OFF \
    -DUSE_OPENSSL=OFF \
    -DUSE_GIF=ON \
    -DUSE_HEIF=ON \
    -DUSE_LIBRAW=ON \
    -DUSE_NUKE=OFF \
    -DSTOP_ON_WARNING=OFF \
    -DLibRaw_ROOT="${MINGW_PREFIX}/libraw-gpl2" \
    -DBOOST_ROOT=${MINGW_PREFIX} \
    -DOpenJPEG_ROOT=${MINGW_PREFIX} \
    -DOPENJPEG_INCLUDE_DIR=`pkg-config --variable=includedir libopenjp2` \
    -DUSE_QT=OFF \
    -DUSE_PYTHON=OFF \
    -DUSE_PYTHON3=OFF \
    -DUSE_PTEX=OFF \
    -DUSE_EXTERNAL_PUGIXML=OFF \
    -DOIIO_BUILD_TESTS=OFF \
    -DCMAKE_CXX_STANDARD=14 \
    -DCMAKE_SHARED_LINKER_FLAGS=" -Wl,--export-all-symbols -Wl,--enable-auto-import " \
    ${extra_config} \
    ../OpenImageIO-${pkgver}
  make
}

package() {
  cd "${srcdir}"/build-${MINGW_CHOST}
  #make DESTDIR=${pkgdir} install
  DESTDIR="${pkgdir}" ${MINGW_PREFIX}/bin/cmake --install .

  local PREFIX_WIN=$(cygpath -wm ${MINGW_PREFIX})
  sed -e "s|${PREFIX_WIN}|\$\{PACKAGE_PREFIX_DIR\}|g" \
    -i "${pkgdir}${MINGW_PREFIX}"/lib/cmake/OpenImageIO/OpenImageIOConfig.cmake
  sed -e "s|${MINGW_PREFIX}|\$\{PACKAGE_PREFIX_DIR\}|g" \
    -i "${pkgdir}${MINGW_PREFIX}"/lib/cmake/OpenImageIO/OpenImageIOConfig.cmake

  for _f in "${pkgdir}${MINGW_PREFIX}"/lib/cmake/OpenImageIO/*.cmake; do
    sed -e "s|${PREFIX_WIN}|\$\{_IMPORT_PREFIX\}|g" -i ${_f}
    sed -e "s|${MINGW_PREFIX}|\$\{_IMPORT_PREFIX\}|g" -i ${_f}
  done
}
